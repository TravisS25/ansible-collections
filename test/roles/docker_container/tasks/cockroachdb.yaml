---
- name: Create cockroach storage path
  file:
    state: directory
    path: "{{ storage_path }}"

- name: Set join cluster command fact
  set_fact:
    cockroachdb_command: "start --insecure --join={{ host }}"

- name: Set cockroachdb container facts
  set_fact:
    cockroachdb_container: &cockroachdb_container_ref
      name: cockroachdb
      hostname: cockroachdb
      image: "{{ docker_image }}"
      restart_policy: always
      publish_all_ports: yes
      command: "{{ cockroachdb_command }}"
      mounts:
        - source: "{{ storage_path }}"
          target: /cockroach/cockroach-data

- name: Import container action task for cockroachdb
  import_task: container_action.yaml
  vars:
    docker_action: "{{ docker_action }}"
    container_params:
      <<: *cockroachdb_container_ref

- name: Init cluster block
  when: init_cluster and docker_action == 'start'
  block:
    - name: Set init cluster command fact
      set_fact:
        cockroachdb_container.command: "init --insecure --host={{ host }}"
    - name: Init cockroachdb cluster
      import_task: container_action.yaml
      vars:
        docker_action: "{{ docker_action }}"
        container_params:
          <<: *cockroachdb_container_ref
# - name: Start container block
#   when: docker_action == 'start'
#   block:
#     - name: Run cockroachdb container
#       community.docker.docker_container:
#       <<: *start_container

#     - name: Init cluster block
#       when: init_cluster
#       block:
#         - name: Set init cluster command fact
#           set_fact:
#             cockroachdb_command: "init --insecure --host={{ host }}"
#         - name: Init cockroach cluster
#           community.docker.docker_container:
#           <<: *start_container

# - name: Restart cockroachdb container
#   when: docker_action == 'restart'
#   community.docker.docker_container:
#     state: started
#     restart: yes
#     <<: *cockroachdb_container_ref

# - name: Stop cockroachdb container
#   when: docker_action == 'stop'
#   community.docker.docker_container:
#     state: stopped
#     <<: *cockroachdb_container_ref
