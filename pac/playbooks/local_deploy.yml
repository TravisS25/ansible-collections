---
- name: Local Deploy
  hosts: localhost

  tasks:
    - name: Set playbook facts
      set_fact:
        config: {
          terraform: {
            output_config_file: /tmp/pac_terraform_config.json,
            local_vars: {
              root_var: {}
            } 
          }
        }

    - name: Config file block
      when: config_file is defined
      block:
        - name: Import config file
          set_fact:
            config: "{{ lookup('file', config_file) }}"

        - name: Terraform prelight
          import_role:
            name: traviss25.pac.terraform
            tasks_from: main_preflight
          vars:
            local_vars:
              root_var: "{{ config.terraform.local_vars.root_var }}"

    - name: Run planned terraform
      import_role:
        name: traviss25.pac.terraform
      vars:
        output_config_file: "{{ config.terraform.output_config_file }}"
        state: planned
        local_vars:
          root_var: "{{ config.terraform.local_vars.root_var }}"

    - name: Run apply terraform
      import_role:
        name: traviss25.pac.terraform
      vars:
        output_config_file: "{{ config.terraform.output_config_file }}"
        state: present
        local_vars:
          root_var: "{{ config.terraform.local_vars.root_var }}"

    - name: Get output config file content
      set_fact:
        output_config_content: "{{ lookup('file', config.terraform.output_config_file) | from_json }}"

    - name: Set droplet settings
      set_fact:
        droplets: "{{ output_config_content.output_changes.local_config.after.droplets }}"

    - name: Droplet preflights
      loop: "{{ droplets }}"
      include_role:
        name: traviss25.pac.droplet
        tasks_from: local
        apply:
          delegate_to: "{{ item.ip }}"
          become: true
          remote_user: "{{ item.user }}"
      vars:
        preflight: true
        droplet: "{{ item }}"