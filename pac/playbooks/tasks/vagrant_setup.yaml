---
- name: Vagrant Setup
  hosts: localhost
  # vars:
  #   vagrant_file_txt: |
  #     Vagrant.configure("2") do |config|
  #       config.vm.box = "centos/7"
  #       config.vm.provider "hyperv" do |machine|
  #         machine.vmname = "centos7"
  #       end

  #       config.vm.provision "shell", inline: $set_environment_variables, run: "always"

  #       config.vm.provision "ansible_local" do |ansible|
  #         ansible.playbook = "playbook.yml"
  #         ansible.verbose = true
  #         ansible.install_mode = "pip"
  #         ansible.version = "2.2.1.0"
  #       end
  #     end

  tasks:
    - name: Enter Project Name
      pause:
        prompt: "Name the vagrant project (Default: vagrant_test)"
      register: vagrant_project_name_result
    - name: Set vagrant project name and dir
      set_fact:
        pb_vagrant_project_name: "{{ vagrant_project_name_result.user_input | default('vagrant_test') }}"
        pb_vagrant_project_dir: "~/.vagrant_projects/{{ pb_vagrant_project_name }}"
    - name: Gather package facts
      package_facts:
        manager: auto
    - name: Set vagrant_installed variable to true if vagrant installed
      set_fact:
        pb_vagrant_installed: true
      when: 'vagrant' in ansible_facts.packages
    - name: Install vagrant if not already installed
      shell: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main
        apt update && apt install vagrant
      become: true
      when: 'vagrant' not in ansible_facts.packages
    - name: Enter Vagrant Box
      pause:
        prompt: "Enter vagrant box (Default: peru/ubuntu-20.04-server-amd64)"
      register: vagrant_box_result
    - name: Set vagrant box
      set_fact:
        pb_vagrant_box: "{{ vagrant_box_result.user_input | default('peru/ubuntu-20.04-server-amd64') }}"
    - name: Download vagrant box
      shell: "vagrant box add {{ pb_vagrant_box }}"
    - name: Create vagrant project directory if not exists
      file:
        path: "{{ pb_vagrant_project_dir }}"
        state: directory
        mode: '0600'
      when: pb_run_type == 'local'
    - name: Delete vagrant file if exists
      file:
        path: "{{ pb_vagrant_project_file }}"
        state: absent
      when: pb_run_type == 'local'
    - name: Creating vagrant file
      file:
        path: "{{ vagrant_file }}"
        state: touch
      when: pb_run_type == 'local'
    # - name: Write to vagrant file
    #   lineinfile:
    #     path: "{{ pb_vagrant_project_file }}"
    #     line: "{{ vagrant_file_txt }}"
    #   when: pb_run_type == 'local'
