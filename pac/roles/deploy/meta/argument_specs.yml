---
http_options: &http_options_ref
  valid_status_codes:
    type: list
    elements: int
    required: true
    description: List of status codes that is considered success from vault

storage_path_options: &storage_path_options_ref
  storage_path:
    type: str
    required: true
    description: Absolute path to directory to store data on host

config_file_options: &config_file_options_ref
  config_file:
    type: str
    required: true
    description: Absolute path to main config file on host

config_dir_options: &config_dir_options_ref
  config_dir:
    type: str
    required: true
    description: Absolute path to root dir where multiple config files reside

docker_container_options: &docker_container_options_ref
  action:
    type: str
    default: start
    description: Determine what action to perform on docker container
    choices:
      - start
      - stop
      - restart

pki_options: &pki_options_ref
  role_name:
    type: str
    required: true
    description: Name of pki
  role_ttl:
    type: str
    required: true
    description: Time to live of any cert generated by role
  mount_path:
    type: str
    required: true
    description: Path to mount pki in vault
  common_name:
    type: str
    required: true
    description: CN name for cert
  allowed_domains:
    type: list
    elements: str
    required: true
    description: Specifies the domains allowed to issue certificates for
  max_lease_ttl:
    type: str
    required: true
    description: Time to live of CA
  issuing_certificates:
    type: list
    elements: str
    required: true
    description: URL(s) users can request to get cert
  crl_distribution_points:
    type: list
    elements: str
    required: true
    description: URL(s) users can request to get crl list

vault_settings: &vault_settings_ref
  vault:
    type: dict
    required: true
    description: Vaul settings
    options:
      ip:
        type: str
        required: true
        description: IP of vault server
      port:
        type: str
        default: :8200
        description: Port vault server is listening on
      token:
        type: str
        required: true
        description: Vault token to perform actions against vault
      cert_settings:
        type: dict
        description: Vault settings for generating certs
        options:
          int_pki_mount_point:
            type: str
            required: true
            description: Intermediate PKI mount point to reference
          issue_role:
            type: str
            required: true
            description: Name of role to create the certificate against

# -------------------------------------------------------------------------

vault_options: &vault_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for vault
    options:
      <<:
        [
          *docker_container_options_ref,
          *config_dir_options_ref,
          *storage_path_options_ref,
          *http_options_ref
        ]
      pki_settings:
        type: dict
        required: true
        description: Various pki settings for vault
      host:
        type: str
        default: http://localhost:8200
        description: Host/ip to vault server
      local_tokens_file_store:
        type: str
        required: true
        description: Absolute file path on controller host to store vault generated tokens
      local_keys_file_store:
        type: str
        description: Passthrough
      secret_shares:
        type: int
        description: Passthrough
      secret_threshold:
        type: int
        description: Passthrough
      token:
        type: str
        description: Token to use for auth when making api requests
      token_settings:
        type: dict
        description: Settings revolving around token
        options:
          roles:
            type: list
            elements: dict
            description: |
              List of token roles to create/update
              Naming of fields should correspond with api
          tokens:
            type: list
            elements: dict
            description: |
              List of tokens to create/update
              Naming of fields should correspond with api
      policy_settings:
        type: dict
        description: Settings revolving around policy
        options:
          policies:
            type: list
            elements: dict
            required: true
            description: |
              List of policies to create/update
              Naming of fields should correspond with api

alertmanager_options: &alertmanager_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for alert manager
    options:
      <<: [*docker_container_options_ref, *config_file_options_ref]

coredns_options: &coredns_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for coredns
    options:
      <<: [*config_file_options_ref]

cockroachdb_options: &cockroachdb_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for cockroachdb
    options:
      <<:
        [
          *docker_container_options_ref,
          *storage_path_options_ref,
          *vault_settings_ref,
          *http_options_ref,
        ]
      advertise_port:
        type: str
        default: :26257
        description: Port cockroachdb server advertises for other ports
      node_cert_request:
        type: dict
        required: true
        description: JSON object used for requesting cert from vault server for node
      client_cert_request:
        type: dict
        required: true
        description: JSON object used for requesting cert from vault server for client
      insecure:
        type: bool
        default: false
        description: Determines whether to start cockroach in insecure mode
      cockroach_certs_dir:
        type: str
        required: true
        description: Absolute directory path to store cockroach certs on host
      cluster_join:
        type: str
        required: true
        description: Comma seperated string of hosts to join cluster

minio_options: &minio_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for minio
    options:
      <<: [*docker_container_options_ref, *storage_path_options_ref]
      hostname:
        type: str
        required: true
        description: Name of host to start server on
      protocol:
        type: str
        required: true
        description: Determines what protocol to use connect other nodes
        choices:
          - http
          - https
      distributed_mode:
        type: dict
        description: Object for settings on distributed mode for minio
        options:
          num_of_drives:
            type: int
            required: true
            description: Number of drives to attach to each node
          num_of_hosts:
            type: int
            required: true
            description: Number of hosts apart of cluster

node_exporter_options: &node_exporter_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for node exporter
    options:
      <<: [*docker_container_options_ref, *storage_path_options_ref]

prometheus_options: &prometheus_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for prometheus
    options:
      <<:
        [
          *docker_container_options_ref,
          *storage_path_options_ref,
          *config_dir_options_ref,
        ]

grafana_options: &grafana_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for grafana
    options:
      <<: [*docker_container_options_ref, *storage_path_options_ref]

redis_options: &redis_options_ref
  root_var:
    type: dict
    required: true
    description: Generic vars for redis
    options:
      <<: [*docker_container_options_ref, *storage_path_options_ref]

deploy_options: &deploy_options_ref
  droplet:
    type: dict
    required: true
    description: Variety of droplet settings
  deploy_var_settings:
    type: dict
    required: true
    description: Variety of deploy settings for droplet

argument_specs:
  deploy:
    short_description: Applies deploy settings to given droplet
    options: *deploy_options_ref

  deploy_preflight:
    short_description: Deploy util preflight
    options: *deploy_options_ref

  vault:
    short_description: Docker container actions for vault
    options: *vault_options_ref

  vault_preflight:
    short_description: Vault preflight
    options: *vault_options_ref

  alertmanager:
    short_description: Docker container actions for alert manager
    options: *alertmanager_options_ref

  alertmanager_preflight:
    short_description: Alertmanager preflight
    options: *alertmanager_options_ref

  coredns:
    short_description: Docker container actions for coredns
    options: *coredns_options_ref

  coredns_preflight:
    short_description: Coredns preflight
    options: *coredns_options_ref

  cockroachdb:
    short_description: Docker container actions for cockroachdb
    options: *cockroachdb_options_ref

  cockroachdb_preflight:
    short_description: Cockroachdb preflight
    options: *cockroachdb_options_ref

  minio:
    short_description: Docker container actions for minio
    options: *minio_options_ref

  minio_preflight:
    short_description: Minio preflight
    options: *minio_options_ref

  node_exporter:
    short_description: Docker container actions for node exporter
    options: *node_exporter_options_ref

  node_exporter_preflight:
    short_description: Node exporter preflight
    options: *node_exporter_options_ref

  prometheus:
    short_description: Docker container actions for prometheus
    options: *prometheus_options_ref

  prometheus_preflight:
    short_description: Prometheus preflight
    options: *prometheus_options_ref

  grafana:
    short_description: Docker container actions for grafana
    options: *grafana_options_ref

  grafana_preflight:
    short_description: Grafana preflight
    options: *grafana_options_ref

  redis:
    short_description: Docker container actions for redis
    options: *redis_options_ref

  redis_preflight:
    short_description: Redis preflight
    options: *redis_options_ref
