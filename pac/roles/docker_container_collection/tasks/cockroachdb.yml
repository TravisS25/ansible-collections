---
- name: Create cockroach storage path
  file:
    state: directory
    path: "{{ root_var.storage_path }}"
    mode: 0600

- name: Set cockroachdb container facts
  set_fact:
    cockroachdb_container_params: &cockroachdb_container_params_ref
      name: cockroachdb
      hostname: cockroachdb
      image: "cockroachdb/cockroach:{{ all_cockroachdb_defaults.image_version }}"
      restart_policy: always
      publish_all_ports: yes
      command: "{{ root_var.start_command }}{% if root_var.init_command and root_var.action == 'start' %} && {{ root_var.init_command }}{% endif %}"
      mounts:
        - source: "{{ root_var.storage_path }}"
          target: /cockroach/cockroach-data

- name: Start container
  when: action == 'start'
  community.docker.docker_container:
    <<: *cockroachdb_container_params_ref

- name: Restart container
  when: action == 'restart'
  community.docker.docker_container:
    state: started
    restart: yes
    <<: *cockroachdb_container_params_ref

- name: Stop container
  when: action == 'stop'
  community.docker.docker_container:
    state: stopped
    <<: *cockroachdb_container_params_ref







# - name: Create cockroach storage path
#   file:
#     state: directory
#     path: "{{ root_var.storage_path }}"

# - name: Set cockroachdb container facts
#   set_fact:
#     cockroachdb_container_params: &cockroachdb_container_params_ref
#       name: cockroachdb
#       hostname: cockroachdb
#       image: cockroachdb/cockroach:v22.1.3
#       restart_policy: always
#       publish_all_ports: yes
#       command: "{{ root_var.start_command }}{% if root_var.init_command and root_var.action == 'start' %} && {{ root_var.init_command }}{% endif %}"
#       mounts:
#         - source: "{{ root_var.storage_path }}"
#           target: /cockroach/cockroach-data

# - name: Start container
#   when: action == 'start'
#   community.docker.docker_container:
#     <<: *cockroachdb_container_params_ref

# - name: Restart container
#   when: action == 'restart'
#   community.docker.docker_container:
#     state: started
#     restart: yes
#     <<: *cockroachdb_container_params_ref

# - name: Stop container
#   when: action == 'stop'
#   community.docker.docker_container:
#     state: stopped
#     <<: *cockroachdb_container_params_ref

# - name: Init cluster block
#   when: root_var.init_command is defined and root_var.action == 'start'
#   block:
#     - name: Update docker params
#       set_fact:
#         cockroachdb_container_params: "{{ cockroachdb_container_params | combine({'command': root_var.init_command}) }}"
    
#     - name: Start container
#       when: action == 'start'
#       community.docker.docker_container:
#         <<: *cockroachdb_container_params_ref
