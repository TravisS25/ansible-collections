---
- name: Set up dev environment
  hosts: localhost
  gather_facts: true

  pre_tasks:
    - name: Assert import_file is defined
      assert:
        that: import_file is defined
      fail_msg: Variable "import_file" is not defined

  tasks:
    - name: Import vars from file
      include_vars:
        name: file_vars
        file: "{{ import_file }}"

    - name: Import droplet argument specs
      include_vars:
        name: util_setup_arg_specs
        file: "{{ all_defaults.base_ansible_install_path }}/traviss25/util/roles/setup/meta/argument_specs.yaml"

    - name: Import dev setup argument specs
      include_vars:
        name: dev_setup_arg_specs
        file: "{{ all_defaults.base_ansible_install_path }}/traviss25/dev/roles/setup/meta/argument_specs.yaml"

    - name: Import dev vagrant argument specs
      include_vars:
        name: dev_vagrant_arg_specs
        file: "{{ all_defaults.base_ansible_install_path }}/traviss25/dev/roles/vagrant/meta/argument_specs.yaml"

    - name: Import ssh argument specs
      include_vars:
        name: util_ssh_arg_specs
        file: "{{ all_defaults.base_ansible_install_path }}/traviss25/util/roles/ssh/meta/argument_specs.yaml"

    - name: Verify droplets setup
      loop: "{{ file_vars.config.droplets }}"
      validate_argument_spec:
        argument_spec: "{{ util_setup_arg_specs['argument_specs']['droplet']['options'] }}"
        provided_arguments:
          droplet: "{{ item }}"
          default_docker_container: "{{ all_defaults.docker_container }}"

    - name: Verify vm provider install
      validate_argument_spec:
        argument_spec: "{{ dev_vagrant_arg_specs['argument_specs']['vm_provider_install']['options'] }}"
        provided_arguments:
          vm_provider: "{{ file_vars.config.vm_provider }}"

    - name: Verify libvirt disk
      when: file_vars.config.vm_provider == 'libvirt' and item.1 is defined and item.1 | length > 0
      loop: "{{ file_vars.config.droplets | subelements('vagrant.disks') }}"
      validate_argument_spec:
        argument_spec: "{{ dev_vagrant_arg_specs['argument_specs']['libvirt_disk']['options'] }}"
        provided_arguments:
          vm_name: "{{ item.0.name }}"
          project_root: "{{ file_vars.vagrant.project_root }}"
          disk: "{{ item.1 }}"

    - name: Verify vagrant install
      validate_argument_spec:
        argument_spec: "{{ dev_vagrant_arg_specs['argument_specs']['vagrant_install']['options'] }}"
        provided_arguments:
          vm_provider: "{{ file_vars.vagrant.vm_provider }}"

    - name: Verify vagrant setup
      validate_argument_spec:
        argument_spec: "{{ dev_vagrant_arg_specs['argument_specs']['vagrant_setup']['options'] }}"
        provided_arguments:
          vm_provider: "{{ file_vars.vagrant.vm_provider }}"
          project_root: "{{ file_vars.vagrant.project_root }}"
          droplets: "{{ file_vars.droplets }}"

    - name: Verify ssh setup
      loop: "{{ file_vars.config.droplets }}"
      validate_argument_spec:
        argument_spec: "{{ util_ssh_arg_specs['argument_specs']['pass_key']['options'] }}"
        provided_arguments:
          ip: "{{ item.ip }}"
          user: "{{ item.user_creds.username }}"
          password: "{{ item.user_creds.password }}"

    - name: Verify hosts file setup
      loop: "{{ file_vars.config.droplets | subelements('host_file_list') }}"
      validate_argument_spec:
        argument_spec: "{{ dev_setup_arg_specs['argument_specs']['update_hosts_file']['options'] }}"
        provided_arguments:
          ip: "{{ item.1.ip }}"
          hostname: "{{ item.1.hostname }}"
          fqdn: "{{ item.1.fqdn }}"

    - name: Install vm provider
      import_role:
        name: setup
        tasks_from: vm_provider_install
      vars:
        vm_provider: "{{ vm_provider }}"

    - name: Install vagrant
      import_role:
        name: setup
        tasks_from: vagrant_install

    - name: Setup vagrant
      import_role:
        name: setup
        tasks_from: vagrant_setup
      vars:
        vm_provider: "{{ file_vars.vagrant.vm_provider }}"
        project_root: "{{ file_vars.vagrant.project_root }}"
        file_content: "{{ file_vars.vagrant.file_content }}"

    - name: Import ssh setup role
      loop: "{{ file_vars.config.droplets }}"
      include_role:
        name: traviss25.util.ssh
        tasks_from: pass_key
      vars:
        ip: "{{ item.ip }}"
        user: "{{ item.user_creds.username }}"
        password: "{{ item.user_creds.password }}"

    - name: Import update host file role
      loop: "{{ file_vars.config.droplets | subelements('host_file_list') }}"
      include_role:
        name: system_util
        tasks_from: update_droplets_file
        apply:
          delegate_to: "{{ item.0.ip }}"
          become: true
      vars:
        ip: "{{ item.1.ip }}"
        fqdn: "{{ item.1.fqdn }}"
        hostname: "{{ item.1.hostname }}"

    - name: Import droplet setup role
      loop: "{{ file_vars.config.droplets }}"
      become: true
      delegate_to: "{{ item.ip }}"
      include_role:
        name: traviss25.util.setup
        tasks_from: droplet
      vars:
        droplet: "{{ item }}"
        default_docker_container: "{{ all_defaults.docker_container }}"
