---
- name: Foo
  hosts: localhost

  tasks:
    - name: Import config vars from file
      include_vars:
        name: file_vars
        file: "{{ import_file }}"

    - name: Assert config is defined
      assert:
        that: file_vars.config is defined
        fail_msg: Config object must be defined

    - name: Set playbook facts
      set_fact:
        vagrants: []

    - name: Extract values from droplets
      loop: "{{ file_vars.config.droplets }}"
      set_fact:
        vagrants: "{{ vagrants + [item.vagrant] }}"

    - name: VM provider install preflight
      include_role:
        name: traviss25.dev.setup
        tasks_from: vm_provider_install_preflight
      vars:
        vm_provider: "{{ file_vars.config.vm_provider }}"

    - name: Vagrant main prelight
      import_role:
        name: traviss25.dev.vagrant
        tasks_from: main_preflight
      vars:
        vm_provider: "{{ file_vars.config.vm_provider }}"
        project_root: "{{ file_vars.config.project_root }}"
        vagrants: "{{ vagrants }}"

    - name: Libvirt main preflight
      when: file_vars.config.vm_provider == 'libvirt'
      loop: "{{ vagrants }}"
      include_role:
        name: traviss25.dev.libvirt
        tasks_from: main_preflight
      vars:
        vm_name: "{{ item.name }}"
        project_root: "{{ file_vars.config.project_root }}"
        disks: "{{ item.disks | default([]) }}"

    - name: Droplet preflight
      loop: "{{ file_vars.config.droplets }}"
      include_role:
        name: traviss25.util.setup
        tasks_from: droplet_preflight
      vars:
        droplet: "{{ item }}"

    # - name: CA server preflight
    #   loop: "{{ file_vars.config.droplets }}"
    #   when: item.ca is defined and item.ca.server is defined
    #   include_role:
    #     name: traviss25.dev.ca
    #     tasks_from: server_preflight
    #   vars:
    #     cert: "{{ item.ca.server.cert | default({}) }}"
    #     key: "{{ item.ca.server.key | default({}) }}"

    # - name: CA client preflight
    #   loop: "{{ file_vars.config.droplets }}"
    #   when: item.ca is defined and item.ca.client is defined
    #   include_role:
    #     name: traviss25.dev.ca
    #     tasks_from: client_preflight
    #   vars:
    #     ip: "{{ item.ip }}"
    #     cert: "{{ item.ca.client.cert | default({}) }}"
    #     key: "{{ item.ca.client.key | default({}) }}"
    #     subject_alt_names: "{{ item.ca.client.subject_alt_names }}"
    #     ca_server:
    #       ip: "{{ item.ca.client.ca_server.ip }}"

    # - name: SSH passkey preflight
    #   loop: "{{ file_vars.config.droplets }}"
    #   include_role:
    #     name: traviss25.util.ssh
    #     tasks_from: pass_key_preflight
    #   vars:
    #     ip: "{{ item.ip }}"
    #     username: "{{ item.user_creds.username }}"
    #     password: "{{ item.user_creds.password }}"

    # - name: Docker container preflight
    #   loop: "{{ file_vars.config.droplets | subelements('docker_containers') }}"
    #   when: item.1.from_collection is defined and item.1.from_collection == true
    #   include_role:
    #     name: traviss25.docker.docker_container_collection
    #     tasks_from: "{{ item.1.name }}_preflight"
    #   vars:
    #     vars: "{{ item.1.vars }}"

    # - name: Docker compose preflight
    #   loop: "{{ file_vars.config.droplets | subelements('docker_composes') }}"
    #   when: item.1.from_collection is defined and item.1.from_collection == true
    #   include_role:
    #     name: traviss25.docker.docker_compose_collection
    #     tasks_from: "{{ item.1.name }}_preflight"
    #   vars:
    #     vars: "{{ item.1.vars }}"
