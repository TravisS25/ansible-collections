---
- name: Become sudo for entire task
  become: true
  block:
    - name: Update repositories
      apt:
        update_cache: yes

    - name: Set install facts
      set_fact:
        puppet_pkg_path: /tmp/puppet-release.deb
        puppet_conf_path: /etc/puppetlabs/puppet/puppet.conf

    # - name: Download puppet repo package
    #   get_url:
    #     url: https://apt.puppet.com/puppet7-release-focal.deb
    #     dest: "{{ puppet_pkg_path }}"

    # - name: Install puppet repo package
    #   shell: "dpkg -i {{ puppet_pkg_path }}"

    # - name: Re-update repositories
    #   apt:
    #     update_cache: yes

    - name: Setup puppet master settings
      when: agent is not defined
      block:
        - name: Install puppet master
          apt:
            name: puppetserver

        - name: Import update hosts file task from system_util role
          import_role:
            name: system_util
            tasks_from: update_hosts_file
          vars:
            ip: "{{ master_ip }}"
            hostname: "{{ master_hostname }}"
            fqdn: "{{ master_fqdn }}"

        - name: Print conf to stdout
          shell: "cat {{ puppet_conf_path }}"
          register: conf_output

        - name: Update puppet conf master section
          when: "'dns_alt_names =' not in conf_output.stdout"
          lineinfile:
            path: "{{ puppet_conf_path }}"
            insertafter: "[master]"
            line: |
              {% if '[master]' not in conf_output.stdout %}
              
              [master]
              {% endif %}
              dns_alt_names = {{ master_hostname }}, {{ master_fqdn }}

        - name: Update puppet conf main section
          when: "'certname' not in conf_output.stdout"
          lineinfile:
            path: "{{ puppet_conf_path }}"
            insertafter: "[main]"
            line: |
              {% if '[main]' not in conf_output.stdout %}

              [main]
              {% endif %}
              certname = {{ master_fqdn }}
              server = {{ master_hostname }}

        - name: Start puppetserver
          systemd:
            name: puppetserver
            enabled: yes
            state: started

        - name: Start puppet agent on puppet server
          systemd:
            name: puppet
            enabled: yes
            state: started

    - name: Setup puppet agent settings
      when: agent is defined
      block:
        - name: Install puppet agent
          apt:
            name: puppet-agent

        - name: Check if main section exists
          lineinfile:
            path: "{{ puppet_conf_path }}"
            regexp: "[main]"
            state: absent
          check_mode: yes
          changed_when: false
          register: puppet_main_check

        - name: Update puppet conf main section
          lineinfile:
            path: "{{ puppet_conf_path }}"
            regexp: "{% if puppet_main_check.found %}[main]{% endif %}"
            insertafter: |
              {% if not puppet_main_check.found %}[main]{% endif %}
              certname = {{ agent.fqdn }}
              server = {{ master_hostname }}

        - name: Bootstrap ssl for agent
          shell: /opt/puppetlabs/puppet/bin/puppet ssl bootstrap

        - name: Approve certname request of agent from master server
          become: true
          remote_user: "{{ master_remote_user }}"
          delegate_to: "{{ master_ip }}"
          shell: /opt/puppetlabs/puppet/bin/puppetserver ca sign --all

        - name: Bootstrap ssl for agent again
          shell: /opt/puppetlabs/puppet/bin/puppet ssl bootstrap

        - name: Import update hosts file task from system_util role
          become: true
          remote_user: "{{ master_remote_user }}"
          delegate_to: "{{ master_ip }}"
          import_role:
            name: system_util
            tasks_from: update_hosts_file
          vars:
            ip: "{{ agent.ip }}"
            hostname: "{{ agent.hostname }}"
            fqdn: "{{ agent.fqdn }}"

